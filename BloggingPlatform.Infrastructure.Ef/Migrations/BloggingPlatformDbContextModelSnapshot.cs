// <auto-generated />
using System;
using BloggingPlatform.Infrastructure.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloggingPlatform.Infrastructure.Ef.Migrations
{
    [DbContext(typeof(BloggingPlatformDbContext))]
    partial class BloggingPlatformDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.Post", b =>
                {
                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Slug");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Slug = "augmented-reality-ios-application",
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality iOS app.",
                            Title = "Augmented Reality iOS Application",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Slug = "augmented-reality-web-application",
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality Web app.",
                            Title = "Augmented Reality Web Application",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Slug = "augmented-reality-android-application",
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality Android app.",
                            Title = "Augmented Reality Android Application",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.PostTag", b =>
                {
                    b.Property<string>("PostSlug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagSlug")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostSlug", "TagSlug");

                    b.HasIndex("TagSlug");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostSlug = "augmented-reality-ios-application",
                            TagSlug = "ios"
                        },
                        new
                        {
                            PostSlug = "augmented-reality-ios-application",
                            TagSlug = "awesome"
                        },
                        new
                        {
                            PostSlug = "augmented-reality-android-application",
                            TagSlug = "ar"
                        });
                });

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.Tag", b =>
                {
                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Slug");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Slug = "ios",
                            Name = "iOS"
                        },
                        new
                        {
                            Slug = "awesome",
                            Name = "Awesome"
                        },
                        new
                        {
                            Slug = "ar",
                            Name = "AR"
                        });
                });

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.PostTag", b =>
                {
                    b.HasOne("BloggingPlatform.Infrastructure.Ef.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostSlug")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloggingPlatform.Infrastructure.Ef.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagSlug")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.Post", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("BloggingPlatform.Infrastructure.Ef.Entities.Tag", b =>
                {
                    b.Navigation("PostTags");
                });
#pragma warning restore 612, 618
        }
    }
}
